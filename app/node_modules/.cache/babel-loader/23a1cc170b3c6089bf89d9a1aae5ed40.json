{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { cloneDate } from '@progress/kendo-date-math';\nimport { classNames, Keys } from '@progress/kendo-react-common';\nimport { provideIntlService, registerForIntl } from '@progress/kendo-react-intl';\nimport { TimeList } from './TimeList';\nimport { MIDNIGHT_DATE, MIN_TIME, MAX_TIME } from '../utils';\nimport { TIME_PART } from './models/TimePart';\nimport { generateGetters, generateSnappers, getNow, isInTimeRange, snapTime, timeInRange, valueMerger } from './utils';\nvar formatRegExp = new RegExp(TIME_PART.hour + \"|\" + TIME_PART.minute + \"|\" + TIME_PART.second + \"|\" + TIME_PART.dayperiod + \"|literal\");\n/**\n * @hidden\n */\n\nexport var Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Left\"] = 0] = \"Left\";\n  Direction[Direction[\"Right\"] = 1] = \"Right\";\n})(Direction || (Direction = {}));\n/**\n * @hidden\n */\n\n\nvar TimeSelector =\n/** @class */\nfunction (_super) {\n  __extends(TimeSelector, _super);\n\n  function TimeSelector(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.timeLists = [];\n\n    _this.focusActiveList = function () {\n      var timeList = _this.timeLists[0];\n\n      if (_this.state.activeListIndex === -1 && !_this.hasActiveButton() && timeList && timeList.element) {\n        timeList.element.focus();\n      }\n    };\n\n    _this.focusList = function (dir) {\n      if (!_this.timeLists.length) {\n        return;\n      }\n\n      _this.timeLists.reduce(_this.listReducer, []).map(function (state) {\n        return dir === Direction.Right ? state.next : state.prev;\n      }).map(function (list) {\n        return list && list.element && list.element.focus();\n      });\n    };\n\n    _this.listReducer = function (state, list, idx, all) {\n      if (state.length || list.props.id !== _this.state.activeListIndex) {\n        return state;\n      }\n\n      return [{\n        next: all[idx + 1] || list,\n        prev: all[idx - 1] || list\n      }];\n    };\n\n    _this.showNowButton = function () {\n      return !_this.hasSteps() && _this.props.nowButton && isInTimeRange(getNow(), _this.min, _this.max);\n    };\n\n    _this.handleKeyDown = function (event) {\n      var keyCode = event.keyCode;\n\n      switch (keyCode) {\n        case Keys.enter:\n          if (!_this.hasActiveButton()) {\n            _this.handleAccept(event);\n          }\n\n          return;\n\n        case Keys.left:\n          event.preventDefault();\n\n          _this.focusList(Direction.Left);\n\n          return;\n\n        case Keys.right:\n          event.preventDefault();\n\n          _this.focusList(Direction.Right);\n\n          return;\n\n        default:\n          return;\n      }\n    };\n\n    _this.handleAccept = function (event) {\n      var value = _this.mergeValue(cloneDate(_this.value || getNow()), _this.current);\n\n      _this.setState({\n        value: value\n      });\n\n      _this.valueDuringOnChange = value;\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.call(undefined, {\n          syntheticEvent: event,\n          nativeEvent: event.nativeEvent,\n          value: _this.value,\n          target: _this\n        });\n      }\n\n      _this.valueDuringOnChange = undefined;\n    };\n\n    _this.handleReject = function (event) {\n      var current = timeInRange(_this.snapTime(cloneDate(_this.value || MIDNIGHT_DATE)), _this.min, _this.max);\n\n      _this.setState({\n        current: current\n      });\n\n      var onReject = _this.props.onReject;\n\n      if (onReject) {\n        onReject.call(undefined, event);\n      }\n    };\n\n    _this.handleListBlur = function () {\n      _this.nextTick(function () {\n        _this.setState({\n          activeListIndex: -1\n        });\n      });\n    };\n\n    _this.handleListFocus = function (idx) {\n      clearTimeout(_this.nextTickId);\n\n      _this.setState({\n        activeListIndex: idx\n      });\n    };\n\n    _this.handleNowClick = function (event) {\n      var now = _this.mergeValue(cloneDate(_this.current), getNow());\n\n      _this.setState({\n        current: now,\n        value: now\n      });\n\n      _this.valueDuringOnChange = now;\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.call(undefined, {\n          syntheticEvent: event,\n          nativeEvent: event.nativeEvent,\n          value: _this.value,\n          target: _this\n        });\n      }\n\n      _this.valueDuringOnChange = undefined;\n    };\n\n    _this.handleChange = function (candidate) {\n      var value = timeInRange(_this.snapTime(cloneDate(candidate || MIDNIGHT_DATE)), _this.min, _this.max);\n\n      _this.setState({\n        current: value\n      });\n    };\n\n    _this.dateFormatParts = _this.intl.splitDateFormat(_this.props.format || TimeSelector.defaultProps.format);\n    _this.mergeValue = valueMerger(generateGetters(_this.dateFormatParts));\n    _this.snapTime = snapTime(generateSnappers(_this.props.steps, _this.props.min || TimeSelector.defaultProps.min));\n    var initialValue = timeInRange(_this.snapTime(cloneDate(_this.props.value || MIDNIGHT_DATE)), _this.min, _this.max);\n    _this.state = {\n      value: _this.props.value || TimeSelector.defaultProps.value,\n      current: initialValue,\n      min: _this.min,\n      max: _this.max,\n      activeListIndex: -1\n    };\n    _this.hasActiveButton = _this.hasActiveButton.bind(_this);\n    return _this;\n  }\n\n  Object.defineProperty(TimeSelector.prototype, \"element\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"value\", {\n    get: function get() {\n      var value = this.valueDuringOnChange !== undefined ? this.valueDuringOnChange : this.props.value !== undefined ? this.props.value : this.state.value;\n      return value !== null ? cloneDate(value) : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"intl\", {\n    get: function get() {\n      return provideIntlService(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"current\", {\n    get: function get() {\n      return cloneDate(this.state.current);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"min\", {\n    get: function get() {\n      return this.snapTime(this.props.min || TimeSelector.defaultProps.min);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"max\", {\n    get: function get() {\n      return this.snapTime(this.props.max || TimeSelector.defaultProps.max);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"steps\", {\n    get: function get() {\n      return this.props.steps || TimeSelector.defaultProps.steps;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  TimeSelector.prototype.componentWillReceiveProps = function (nextProps) {\n    if (nextProps.steps !== this.steps || nextProps.min !== this.min) {\n      this.snapTime = snapTime(generateSnappers(nextProps.steps, nextProps.min));\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  TimeSelector.prototype.componentWillUnmount = function () {\n    clearTimeout(this.nextTickId);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TimeSelector.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        format = _a.format,\n        cancelButton = _a.cancelButton,\n        disabled = _a.disabled,\n        tabIndex = _a.tabIndex,\n        className = _a.className,\n        smoothScroll = _a.smoothScroll;\n    this.timeLists = [];\n    return React.createElement(\"span\", {\n      ref: function ref(el) {\n        _this._element = el;\n      },\n      tabIndex: !disabled ? tabIndex || 0 : undefined,\n      className: classNames('k-timeselector k-reset', className, {\n        'k-state-disabled': disabled\n      }),\n      onKeyDown: this.handleKeyDown\n    }, React.createElement(\"div\", {\n      className: \"k-time-header\"\n    }, React.createElement(\"span\", {\n      className: \"k-title\"\n    }, this.intl.formatDate(this.current, format)), this.showNowButton() && React.createElement(\"button\", __assign({\n      ref: function ref(btn) {\n        _this._nowButton = btn;\n      },\n      className: \"k-button k-bare k-time-now\",\n      title: \"Select Now\"\n    }, {\n      'aria-label': 'Select Now'\n    }, {\n      onClick: this.handleNowClick\n    }), \"NOW\")), React.createElement(\"div\", {\n      className: \"k-time-list-container\"\n    }, React.createElement(\"span\", {\n      className: \"k-time-highlight\"\n    }), this.dateFormatParts.map(function (part, idx) {\n      return part.type !== 'literal' ? React.createElement(\"div\", {\n        key: idx,\n        className: classNames('k-time-list-wrapper', {\n          'k-state-focused': idx === _this.state.activeListIndex\n        }),\n        role: \"presentation\",\n        tabIndex: -1\n      }, React.createElement(\"span\", {\n        className: \"k-title\",\n        onMouseDown: function onMouseDown(e) {\n          e.preventDefault();\n        }\n      }, _this.intl.dateFieldName(part)), React.createElement(TimeList, {\n        min: _this.min,\n        max: _this.max,\n        part: part,\n        step: part.type ? _this.steps[part.type] : 1,\n        smoothScroll: smoothScroll,\n        ref: function ref(el) {\n          if (!el) {\n            return;\n          }\n\n          _this.timeLists.push(el);\n        },\n        id: idx,\n        onFocus: function onFocus() {\n          _this.handleListFocus(idx);\n        },\n        onBlur: _this.handleListBlur,\n        onChange: _this.handleChange,\n        value: _this.current\n      })) : React.createElement(\"div\", {\n        key: idx,\n        className: \"k-time-separator\"\n      }, part.pattern);\n    })), React.createElement(\"div\", {\n      className: \"k-time-footer k-action-buttons\"\n    }, cancelButton && React.createElement(\"button\", __assign({\n      ref: function ref(btn) {\n        _this._cancelButton = btn;\n      },\n      className: \"k-button k-time-cancel\",\n      onClick: this.handleReject,\n      title: \"Cancel\"\n    }, {\n      'aria-label': 'Cancel'\n    }), \"Cancel\"), React.createElement(\"button\", __assign({\n      ref: function ref(btn) {\n        _this._acceptButton = btn;\n      },\n      className: \"k-time-accept k-button k-primary\",\n      onClick: this.handleAccept,\n      title: \"Set\"\n    }, {\n      'aria-label': 'Set'\n    }), \"Set\")));\n  };\n\n  TimeSelector.prototype.nextTick = function (f) {\n    // XXX: use setTimeout due to async focus/blur events in IE, and missing relatedTarget prop.\n    // XXX: https://github.com/facebook/react/issues/3751\n    clearTimeout(this.nextTickId);\n    this.nextTickId = setTimeout(function () {\n      return f();\n    });\n  };\n\n  TimeSelector.prototype.hasActiveButton = function () {\n    if (!this._acceptButton) {\n      return false;\n    }\n\n    return document.activeElement === this._acceptButton || document.activeElement === this._cancelButton || document.activeElement === this._nowButton;\n  };\n\n  TimeSelector.prototype.hasSteps = function () {\n    var _this = this;\n\n    var keys = Object.keys(this.steps);\n    return keys.length !== keys.reduce(function (acc, k) {\n      return acc + _this.steps[k];\n    }, 0);\n  };\n\n  TimeSelector.propTypes = {\n    cancelButton: PropTypes.bool,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    format: function format(props, propName, componentName) {\n      var prop = props[propName];\n      var intl = provideIntlService(this);\n      var dateFormatParts = intl.splitDateFormat(prop);\n      dateFormatParts.forEach(function (part) {\n        if (!formatRegExp.test(part.type)) {\n          throw new Error(\"\\n                    Invalid prop '\" + propName + \"' supplied to \" + componentName + \".\\n                    Provided format is not supported. Supported specifiers are T|t|H|h|m|s|a.\\n                \");\n        }\n      });\n    },\n    max: PropTypes.instanceOf(Date),\n    min: PropTypes.instanceOf(Date),\n    nowButton: PropTypes.bool,\n    steps: PropTypes.shape({\n      hour: PropTypes.number,\n      minute: PropTypes.number,\n      second: PropTypes.number\n    }),\n    smoothScroll: PropTypes.bool,\n    tabIndex: PropTypes.number,\n    value: PropTypes.instanceOf(Date)\n  };\n  TimeSelector.defaultProps = {\n    value: null,\n    disabled: false,\n    nowButton: true,\n    cancelButton: true,\n    format: 't',\n    min: MIN_TIME,\n    max: MAX_TIME,\n    steps: {}\n  };\n  return TimeSelector;\n}(React.Component);\n\nexport { TimeSelector };\nregisterForIntl(TimeSelector);","map":null,"metadata":{},"sourceType":"module"}