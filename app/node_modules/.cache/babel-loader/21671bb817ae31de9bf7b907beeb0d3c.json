{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nimport * as React from 'react';\nimport { normalize } from '../interfaces/GridSortSettings';\nimport { ColumnResizer } from '../drag/ColumnResizer';\nimport { ColumnDraggable } from '../drag/ColumnDraggable';\nimport { GridHeaderCell } from './GridHeaderCell';\nimport { ColumnMenu } from '../columnMenu/ColumnMenu';\n/**\n * @hidden\n */\n\nvar sortSeqMap = {\n  true: {\n    'asc': 'desc',\n    'desc': '',\n    '': 'asc'\n  },\n  false: {\n    'asc': 'desc',\n    'desc': 'asc',\n    '': 'asc'\n  }\n};\n/**\n * @hidden\n */\n\nvar HeaderRow =\n/** @class */\nfunction (_super) {\n  __extends(HeaderRow, _super);\n\n  function HeaderRow(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._element = null;\n\n    _this.cells = function (rowIndexes) {\n      return rowIndexes.map(function (columnIndex, index) {\n        var column = _this.props.columns[columnIndex];\n        var sort = _this.props.sortable && column.sortable;\n        var headerCellProps = {\n          field: column.field,\n          onClick: sort && function (e) {\n            return _this.cellClick(e, column);\n          } || undefined,\n          selectionChange: _this.props.selectionChange,\n          title: column.title,\n          selectionValue: column.headerSelectionValue,\n          render: _this.props.cellRender,\n          children: _this.sortIcon(column.field),\n          key: 1\n        };\n\n        var className = (column.kFirst ? 'k-first ' : '') + _this.cellClass(column.field, column.headerClassName);\n\n        var columnMenu = column.columnMenu || _this.props.columnMenu;\n        return React.createElement(\"th\", {\n          key: index,\n          colSpan: column.colSpan,\n          rowSpan: column.rowSpan,\n          className: className\n        }, [column.children.length === 0 && columnMenu && React.createElement(ColumnMenu, {\n          key: 0,\n          column: {\n            field: column.field,\n            filter: column.filter\n          },\n          sortable: sort && _this.props.sortable,\n          sort: _this.props.sort,\n          onSortChange: _this.props.sortChange,\n          filter: _this.props.filter,\n          filterable: _this.props.filterable && column.filterable,\n          onFilterChange: _this.props.filterChange,\n          render: columnMenu\n        }), column.headerCell && React.createElement(column.headerCell, __assign({}, headerCellProps)) || React.createElement(GridHeaderCell, __assign({}, headerCellProps)), _this.props.columnResize && _this.props.columnResize.resizable && column.resizable && React.createElement(ColumnResizer, {\n          key: 2,\n          resize: function resize(e, element, end) {\n            return _this.props.columnResize && _this.props.columnResize.dragHandler(e, column, element, end);\n          }\n        })]);\n      });\n    };\n\n    _this.cellClick = _this.cellClick.bind(_this);\n    return _this;\n  }\n\n  Object.defineProperty(HeaderRow.prototype, \"element\", {\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HeaderRow.prototype.cellClick = function (e, column) {\n    e.preventDefault();\n\n    if (!this.props.sortChange) {\n      return;\n    }\n\n    var _a = normalize(this.props.sortable || false, column.sortable || false),\n        allowUnsort = _a.allowUnsort,\n        mode = _a.mode;\n\n    var oldDescriptor = (this.props.sort || []).filter(function (d) {\n      return d.field === column.field;\n    })[0];\n    var dir = sortSeqMap[allowUnsort][oldDescriptor && oldDescriptor.dir || ''];\n    var newDescriptor = mode === 'single' ? [] : (this.props.sort || []).filter(function (d) {\n      return d.field !== column.field;\n    });\n\n    if (dir !== '' && column.field) {\n      newDescriptor.push({\n        field: column.field,\n        dir: dir\n      });\n    }\n\n    this.props.sortChange(newDescriptor, e);\n  };\n\n  HeaderRow.prototype.cellClass = function (field, headerClassName) {\n    var customClass = headerClassName ? ' ' + headerClassName : '';\n\n    if (this.props.sort && this.props.sort.filter(function (descriptor) {\n      return descriptor.field === field;\n    }).length > 0) {\n      return 'k-header k-sorted' + customClass;\n    }\n\n    return 'k-header' + customClass;\n  };\n\n  HeaderRow.prototype.sortIcon = function (field) {\n    if (!this.props.sort) {\n      return null;\n    }\n\n    var sortIndex = this.props.sort.findIndex(function (s) {\n      return s.field === field;\n    });\n    return sortIndex >= 0 && [React.createElement(\"span\", {\n      key: 1,\n      className: 'k-icon k-i-sort-' + this.props.sort[sortIndex].dir + '-sm'\n    }), this.props.sort.length > 1 && React.createElement(\"span\", {\n      key: 2,\n      className: \"k-sort-order\"\n    }, sortIndex + 1)];\n  };\n\n  HeaderRow.prototype.render = function () {\n    var _this = this;\n\n    return this.props.columnsMap.map(function (rowIndexes, i) {\n      return _this.props.pressHandler && React.createElement(ColumnDraggable, {\n        key: i,\n        pressHandler: _this.props.pressHandler,\n        dragHandler: _this.props.dragHandler,\n        releaseHandler: _this.props.releaseHandler\n      }, _this.cells(rowIndexes)) || React.createElement(\"tr\", null, _this.cells(rowIndexes));\n    });\n  };\n\n  return HeaderRow;\n}(React.Component);\n\nexport { HeaderRow };","map":null,"metadata":{},"sourceType":"module"}