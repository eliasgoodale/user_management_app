{"ast":null,"code":"/**\n * @hidden\n */\nvar defaultRules = {\n  '#': /[\\d\\s\\+\\-]/,\n  '&': /[\\S]/,\n  '0': /[\\d]/,\n  '9': /[\\d\\s]/,\n  '?': /[a-zA-Z\\s]/,\n  'A': /[a-zA-Z0-9]/,\n  'C': /./,\n  'L': /[a-zA-Z]/,\n  'a': /[a-zA-Z0-9\\s]/\n};\n/**\n * @hidden\n */\n\nvar returnFalse = function returnFalse() {\n  return false;\n};\n/**\n * @hidden\n */\n\n\nvar validationMessage = 'Please enter a valid value!';\n/**\n * @hidden\n */\n\nvar maskingChanged = function maskingChanged(prev, next) {\n  return prev.includeLiterals !== next.includeLiterals || prev.mask !== next.mask || prev.prompt !== next.prompt || prev.promptPlaceholder !== next.promptPlaceholder || !sameRules(prev.rules, next.rules);\n};\n/**\n * @hidden\n */\n\n\nvar sameRules = function sameRules(rules1, rules2) {\n  if (!!rules1 !== !!rules2) {\n    return false;\n  }\n\n  if (rules1 === rules2 || !rules1 || !rules2) {\n    return true;\n  }\n\n  var same = true;\n\n  for (var key in rules1) {\n    if (rules1[key] !== rules2[key]) {\n      same = false;\n      break;\n    }\n  }\n\n  if (same) {\n    for (var key in rules2) {\n      if (!rules1.hasOwnProperty(key)) {\n        same = false;\n        break;\n      }\n    }\n  }\n\n  return same;\n};\n\nexport { defaultRules, maskingChanged, returnFalse, validationMessage };","map":null,"metadata":{},"sourceType":"module"}