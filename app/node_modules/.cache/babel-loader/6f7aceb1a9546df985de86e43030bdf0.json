{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages, pagerOf, pagerPage } from './../messages';\n/**\n * @hidden\n */\n\nvar PagerInput =\n/** @class */\nfunction (_super) {\n  __extends(PagerInput, _super);\n\n  function PagerInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._text = undefined;\n\n    _this.onChange = function (e) {\n      var text = _this._text = e.target.value.replace(/\\D/g, '');\n\n      _this.forceUpdate();\n\n      if (text) {\n        _this.props.pageChange(parseInt(text, 10), e);\n      }\n    };\n\n    _this.value = function () {\n      var value = _this._text === undefined ? _this.props.currentPage.toString() : _this._text;\n      _this._text = undefined;\n      return value;\n    };\n\n    return _this;\n  }\n\n  PagerInput.prototype.render = function () {\n    var _this = this;\n\n    var localizationService = provideLocalizationService(this);\n    return React.createElement(\"span\", {\n      className: \"k-pager-input k-label\"\n    }, localizationService.toLanguageString(pagerPage, messages[pagerPage]), \" \", React.createElement(\"input\", {\n      className: \"k-textbox\",\n      value: this.value(),\n      onBlur: function onBlur() {\n        return _this.forceUpdate();\n      },\n      onChange: this.onChange\n    }), \" \", localizationService.toLanguageString(pagerOf, messages[pagerOf]), \" \", this.props.totalPages);\n  };\n\n  return PagerInput;\n}(React.Component);\n\nexport { PagerInput };\nregisterForLocalization(PagerInput);","map":null,"metadata":{},"sourceType":"module"}