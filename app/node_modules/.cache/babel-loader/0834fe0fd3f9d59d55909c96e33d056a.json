{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { getNestedValue } from '../utils';\n/**\n * The component for each of the items in the `data` property which the Grid renders.\n */\n\nvar GridRow =\n/** @class */\nfunction (_super) {\n  __extends(GridRow, _super);\n\n  function GridRow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  GridRow.prototype.render = function () {\n    var className = this.props.rowType === 'groupFooter' || this.props.rowType === 'groupHeader' ? this.props.rowType === 'groupFooter' && 'k-group-footer' || 'k-grouping-row' : (this.props.isAltRow ? 'k-master-row k-alt' : 'k-master-row') + (this.props.selectedField !== undefined && getNestedValue(this.props.selectedField, this.props.dataItem) ? ' k-state-selected' : '');\n    var defaultRendering = React.createElement(\"tr\", {\n      onClick: this.props.onClick,\n      className: className,\n      style: {\n        height: this.props.rowHeight ? this.props.rowHeight + 'px' : '',\n        visibility: this.props.isHidden ? 'hidden' : ''\n      }\n    }, this.props.children);\n    return this.props.render ? this.props.render.call(undefined, defaultRendering, this.props) : defaultRendering;\n  };\n\n  return GridRow;\n}(React.Component);\n\nexport { GridRow };","map":null,"metadata":{},"sourceType":"module"}