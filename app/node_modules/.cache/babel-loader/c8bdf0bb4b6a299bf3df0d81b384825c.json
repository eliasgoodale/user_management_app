{"ast":null,"code":"import _classCallCheck from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/nfs/2018/e/egoodale/RDT/user_management_app/app/src/components/CheckboxCell.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { changeUserData } from '../actions';\n\nvar InEditCheckbox = function InEditCheckbox(props) {\n  var dataItem = props.dataItem,\n      field = props.field,\n      value = props.value,\n      onItemChange = props.onItemChange;\n  console.log(props);\n  return React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\",\n      verticalAlign: \"middle\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: field,\n    className: \"k-checkbox\",\n    defaultChecked: value,\n    onChange: function onChange(e) {\n      e.dataItem = dataItem;\n      e.field = field, e.value = !value, onItemChange(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"k-checkbox-label\",\n    htmlFor: field,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nvar StaticCheckbox = function StaticCheckbox(value) {\n  return React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\",\n      verticalAlign: \"middle\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"k-checkbox\",\n    defaultChecked: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"k-checkbox-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nvar CheckboxCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckboxCell, _React$Component);\n\n  function CheckboxCell() {\n    _classCallCheck(this, CheckboxCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CheckboxCell).apply(this, arguments));\n  }\n\n  _createClass(CheckboxCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dataItem = _this$props.dataItem,\n          field = _this$props.field,\n          onItemChange = _this$props.onItemChange;\n      var value = dataItem[field];\n      return dataItem.inEdit ? InEditCheckbox({\n        dataItem: dataItem,\n        field: field,\n        onItemChange: onItemChange,\n        value: value\n      }) : value ? StaticCheckbox(value) : React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CheckboxCell;\n}(React.Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onItemChange: function onItemChange(e) {\n      dispatch(changeUserData(e.dataItem.id, e.field, e.value));\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CheckboxCell);","map":{"version":3,"sources":["/nfs/2018/e/egoodale/RDT/user_management_app/app/src/components/CheckboxCell.tsx"],"names":["React","connect","changeUserData","InEditCheckbox","props","dataItem","field","value","onItemChange","console","log","textAlign","verticalAlign","e","StaticCheckbox","CheckboxCell","inEdit","Component","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux'\nimport { GridItemChangeEvent, GridCellProps } from '@progress/kendo-react-grid'\nimport { changeUserData } from '../actions'\n\nconst InEditCheckbox = (props: any) =>{\n    const {dataItem, field, value, onItemChange} = props\n    console.log(props)\n    return (\n        <td style={{ textAlign: \"center\", verticalAlign: \"middle\" }}>\n            <input type='checkbox'\n             id={field} \n             className='k-checkbox' \n             defaultChecked={value}\n             onChange={(e: any) =>{\n                 e.dataItem = dataItem\n                 e.field = field,\n                 e.value = !value, \n                 onItemChange(e)}}\n            />\n            <label className=\"k-checkbox-label\" htmlFor={field}/>\n        </td>\n    )\n}\n\nconst StaticCheckbox = (value: any) => {\n    return (\n        <td style={{ textAlign: \"center\", verticalAlign: \"middle\" }}>\n        <input type=\"checkbox\" className=\"k-checkbox\" defaultChecked={value} />\n        <label className=\"k-checkbox-label\" />\n    </td>\n    )\n}\n\ninterface CheckboxCellProps {\n    dataItem: any,\n    field: string,\n    onItemChange(e: GridItemChangeEvent): void;\n}\n\nclass CheckboxCell extends React.Component<any, {}> {\n    render () {\n        const { dataItem, field, onItemChange } = this.props\n\t    const value = dataItem[field];\n        return (\n            dataItem.inEdit ? \n                InEditCheckbox({dataItem, field, onItemChange, value}) : \n                value ? StaticCheckbox(value) : <td></td>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    onItemChange: (e: GridItemChangeEvent) => {\n      dispatch(changeUserData(e.dataItem.id, e.field, e.value))\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(CheckboxCell);"]},"metadata":{},"sourceType":"module"}