{"ast":null,"code":"import _objectSpread from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Joi from 'joi';\nvar passwordSchema = Joi.object().keys({\n  password: Joi.string().min(6).max(25).required()\n});\nexport var userSchema = Joi.object().keys({\n  id: Joi.string(),\n  firstName: Joi.string().min(2).max(20).required(),\n  lastName: Joi.string().min(2).max(20).required(),\n  username: Joi.string().min(5).max(20).required(),\n  isActive: Joi.boolean().required(),\n  isEntryAdmin: Joi.boolean().required(),\n  isListAdmin: Joi.boolean().required(),\n  isLocationManager: Joi.boolean().required(),\n  isOperatorAdmin: Joi.boolean().required(),\n  isUserAdmin: Joi.boolean().required()\n});\nexport function userPassesConstraintValidation(user, needsPasswordCheck) {\n  var checkVal = _objectSpread({}, user);\n\n  delete checkVal.password;\n  var result = Joi.validate(_objectSpread({}, checkVal), userSchema);\n\n  if (needsPasswordCheck) {\n    var passwordResult = Joi.validate({\n      password: user.password\n    }, passwordSchema);\n    console.log(passwordResult);\n    return passwordResult.error === null && result.error === null;\n  } else return result.error === null;\n}","map":{"version":3,"sources":["/nfs/2018/e/egoodale/RDT/user_management_app/app/src/validation.ts"],"names":["Joi","passwordSchema","object","keys","password","string","min","max","required","userSchema","id","firstName","lastName","username","isActive","boolean","isEntryAdmin","isListAdmin","isLocationManager","isOperatorAdmin","isUserAdmin","userPassesConstraintValidation","user","needsPasswordCheck","checkVal","result","validate","passwordResult","console","log","error"],"mappings":";AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,IAAMC,cAAmB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,IAAb,CAAkB;AAC7CC,EAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B;AADmC,CAAlB,CAA5B;AAIA,OAAO,IAAMC,UAAe,GAAGT,GAAG,CAACE,MAAJ,GAAaC,IAAb,CAAkB;AAChDO,EAAAA,EAAE,EAAEV,GAAG,CAACK,MAAJ,EAD4C;AAEhDM,EAAAA,SAAS,EAAEX,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EAFqC;AAGhDI,EAAAA,QAAQ,EAAEZ,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EAHsC;AAIhDK,EAAAA,QAAQ,EAAEb,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EAJsC;AAKhDM,EAAAA,QAAQ,EAAEd,GAAG,CAACe,OAAJ,GAAcP,QAAd,EALsC;AAMhDQ,EAAAA,YAAY,EAAEhB,GAAG,CAACe,OAAJ,GAAcP,QAAd,EANkC;AAOhDS,EAAAA,WAAW,EAAEjB,GAAG,CAACe,OAAJ,GAAcP,QAAd,EAPmC;AAQhDU,EAAAA,iBAAiB,EAAElB,GAAG,CAACe,OAAJ,GAAcP,QAAd,EAR6B;AAShDW,EAAAA,eAAe,EAAEnB,GAAG,CAACe,OAAJ,GAAcP,QAAd,EAT+B;AAUhDY,EAAAA,WAAW,EAAEpB,GAAG,CAACe,OAAJ,GAAcP,QAAd;AAVmC,CAAlB,CAAxB;AAaP,OAAO,SAASa,8BAAT,CAAyCC,IAAzC,EAAqDC,kBAArD,EAAkF;AACxF,MAAMC,QAAQ,qBAAOF,IAAP,CAAd;;AACA,SAAOE,QAAQ,CAACpB,QAAhB;AACA,MAAMqB,MAAM,GAAGzB,GAAG,CAAC0B,QAAJ,mBAAiBF,QAAjB,GAA4Bf,UAA5B,CAAf;;AACA,MAAIc,kBAAJ,EAAwB;AACvB,QAAMI,cAAmB,GAAG3B,GAAG,CAAC0B,QAAJ,CAAa;AAACtB,MAAAA,QAAQ,EAAEkB,IAAI,CAAClB;AAAhB,KAAb,EAAwCH,cAAxC,CAA5B;AACA2B,IAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,WAAOA,cAAc,CAACG,KAAf,KAAyB,IAAzB,IAAiCL,MAAM,CAACK,KAAP,KAAiB,IAAzD;AACA,GAJD,MAMC,OAAOL,MAAM,CAACK,KAAP,KAAiB,IAAxB;AACD","sourcesContent":["import * as Joi from 'joi'\nimport { User } from './types' \n\nconst passwordSchema: any = Joi.object().keys({\n\tpassword: Joi.string().min(6).max(25).required(),\n})\n\nexport const userSchema: any = Joi.object().keys({\n\tid: Joi.string(),\n\tfirstName: Joi.string().min(2).max(20).required(),\n\tlastName: Joi.string().min(2).max(20).required(),\n\tusername: Joi.string().min(5).max(20).required(),\n\tisActive: Joi.boolean().required(),\n\tisEntryAdmin: Joi.boolean().required(),\n\tisListAdmin: Joi.boolean().required(),\n\tisLocationManager: Joi.boolean().required(),\n\tisOperatorAdmin: Joi.boolean().required(),\n\tisUserAdmin: Joi.boolean().required(),\n})\n\nexport function userPassesConstraintValidation (user: User, needsPasswordCheck: boolean) {\n\tconst checkVal = {...user};\n\tdelete checkVal.password;\n\tconst result = Joi.validate({...checkVal}, userSchema);\n\tif (needsPasswordCheck) {\n\t\tconst passwordResult: any = Joi.validate({password: user.password}, passwordSchema);\n\t\tconsole.log(passwordResult);\n\t\treturn passwordResult.error === null && result.error === null\n\t}\n\telse\n\t\treturn result.error === null;\n}\n"]},"metadata":{},"sourceType":"module"}