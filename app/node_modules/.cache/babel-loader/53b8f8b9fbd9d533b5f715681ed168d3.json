{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { guid, classNames, FloatingLabel } from '@progress/kendo-react-common';\n\nvar Input =\n/** @class */\nfunction (_super) {\n  __extends(Input, _super);\n\n  function Input(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._inputId = guid();\n\n    _this.isInvalid = function (state) {\n      var result = false;\n\n      for (var prop in state) {\n        if (state.hasOwnProperty(prop)) {\n          result = result || state[prop];\n        }\n      }\n\n      return result;\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.setValidity = function () {\n      if (_this._input && _this._input.setCustomValidity) {\n        _this.validity.valid ? _this._input.classList.remove('k-state-invalid') : _this._input.classList.add('k-state-invalid');\n\n        _this._input.setCustomValidity(_this.validity.valid ? '' : _this.props.validationMessage || '');\n      }\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n\n      _this.valueDuringOnChange = event.target.value;\n\n      if (_this.props.onChange) {\n        _this.props.onChange.call(undefined, {\n          syntheticEvent: event,\n          nativeEvent: event.nativeEvent,\n          value: event.target.value,\n          target: _this\n        });\n      }\n\n      _this.valueDuringOnChange = undefined;\n    };\n\n    _this.state = {\n      value: _this.props.defaultValue || Input.defaultProps.defaultValue\n    };\n    return _this;\n  }\n\n  Object.defineProperty(Input.prototype, \"element\", {\n    /**\n     * Gets the native input element of the Input component.\n     */\n    get: function get() {\n      return this._input;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Input.prototype, \"value\", {\n    /**\n     * Gets the value of the Input.\n     */\n    get: function get() {\n      return this.valueDuringOnChange !== undefined ? this.valueDuringOnChange : this.props.value !== undefined ? this.props.value : this.state.value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Input.prototype, \"name\", {\n    /**\n     * Gets the `name` property of the Input.\n     */\n    get: function get() {\n      return this.props.name;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Input.prototype, \"validity\", {\n    /**\n     * Represents the validity state into which the Input is set.\n     */\n    get: function get() {\n      var result = {\n        badInput: this._input ? this._input.validity.badInput : false,\n        patternMismatch: this._input ? this._input.validity.patternMismatch : false,\n        rangeOverflow: this._input ? this._input.validity.rangeOverflow : false,\n        rangeUnderflow: this._input ? this._input.validity.rangeUnderflow : false,\n        stepMismatch: this._input ? this._input.validity.stepMismatch : false,\n        tooLong: this._input ? this._input.validity.tooLong : false,\n        typeMismatch: this._input ? this._input.validity.typeMismatch : false,\n        valueMissing: this._input ? this._input.validity.valueMissing : false\n      };\n      return __assign({}, result, {\n        customError: this.props.validationMessage !== undefined,\n        valid: this.props.valid !== undefined ? this.props.valid : this._input ? !this.isInvalid(result) : true\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Input.prototype, \"validityStyles\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this.props.validityStyles !== undefined ? this.props.validityStyles : Input.defaultProps.validityStyles;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  Input.prototype.componentDidMount = function () {\n    this.forceUpdate();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Input.prototype.componentDidUpdate = function () {\n    this.setValidity();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Input.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        className = _a.className,\n        label = _a.label,\n        id = _a.id,\n        validationMessage = _a.validationMessage,\n        defaultValue = _a.defaultValue,\n        valid = _a.valid,\n        validityStyles = _a.validityStyles,\n        style = _a.style,\n        props = __rest(_a, [\"className\", \"label\", \"id\", \"validationMessage\", \"defaultValue\", \"valid\", \"validityStyles\", \"style\"]);\n\n    var inputId = id || this._inputId;\n    var isValid = !this.validityStyles || this.validity.valid;\n    var inputClassName = classNames(className, 'k-textbox');\n    var textbox = React.createElement(\"input\", __assign({}, props, {\n      style: !label ? style : undefined,\n      value: this.value,\n      id: inputId,\n      className: inputClassName,\n      onChange: this.handleChange,\n      ref: function ref(el) {\n        _this._input = el;\n      }\n    }));\n    return label ? React.createElement(FloatingLabel, {\n      label: label,\n      children: textbox,\n      value: String(this.value),\n      placeholder: props.placeholder,\n      id: inputId,\n      valid: isValid,\n      style: style\n    }) : textbox;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Input.propTypes = {\n    label: PropTypes.string,\n    validationMessage: PropTypes.string,\n    required: PropTypes.bool,\n    validate: PropTypes.bool\n  };\n  /**\n   * @hidden\n   */\n\n  Input.defaultProps = {\n    defaultValue: '',\n    required: false,\n    validityStyles: true\n  };\n  return Input;\n}(React.Component);\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}