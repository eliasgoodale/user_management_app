{"ast":null,"code":"import { syncData, toggleDeleteConfirmation } from '../actions';\nimport { combineEpics } from 'redux-observable';\nimport { map, filter, withLatestFrom } from 'rxjs/operators';\n\nvar logValue = function logValue(payload) {\n  return {\n    type: \"LOG_VALUE\",\n    payload: payload\n  };\n};\n\nvar displayError = function displayError(error) {\n  return {\n    type: \"DISPLAY_ERROR\",\n    payload: error\n  };\n};\n\nvar syncTableWithCollection = function syncTableWithCollection(action$, state$) {\n  return action$.pipe(filter(function (_ref) {\n    var type = _ref.type;\n    return type === 'users/GET_ALL_FULFILLED' || type === 'users/CREATE_FULFILLED';\n  }), withLatestFrom(state$), map(function () {\n    return syncData(state$.value.collection.data);\n  }));\n};\n\nvar handleRequestError = function handleRequestError(action$, state$) {\n  return action$.pipe(filter(function (_ref2) {\n    var type = _ref2.type;\n    return type.includes('REJECTED');\n  }), map(function (_ref3) {\n    var payload = _ref3.payload;\n    return displayError(payload);\n  }));\n};\n\nvar handleSoftDelete = function handleSoftDelete(action$, state$) {\n  return action$.pipe(filter(function (_ref4) {\n    var type = _ref4.type;\n    return type === 'users/SOFT_DELETE';\n  }), map(function () {\n    return toggleDeleteConfirmation();\n  }));\n};\n\nexport default combineEpics(syncTableWithCollection, handleRequestError, handleSoftDelete);","map":{"version":3,"sources":["/nfs/2018/e/egoodale/RDT/user_management_app/app/src/epics/index.ts"],"names":["syncData","toggleDeleteConfirmation","combineEpics","map","filter","withLatestFrom","logValue","payload","type","displayError","error","syncTableWithCollection","action$","state$","pipe","value","collection","data","handleRequestError","includes","handleSoftDelete"],"mappings":"AAAA,SAAUA,QAAV,EAAoBC,wBAApB,QAAyE,YAAzE;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,GAAT,EAAcC,MAAd,EAA4BC,cAA5B,QAAiD,gBAAjD;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD;AAAA,SAAmB;AAChCC,IAAAA,IAAI,EAAE,WAD0B;AAEhCD,IAAAA,OAAO,EAAEA;AAFuB,GAAnB;AAAA,CAAjB;;AAKA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,SAAiB;AAClCF,IAAAA,IAAI,EAAE,eAD4B;AAElCD,IAAAA,OAAO,EAAEG;AAFyB,GAAjB;AAAA,CAArB;;AAOA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,OAAD,EAAeC,MAAf;AAAA,SAA+BD,OAAO,CAACE,IAAR,CAC3DV,MAAM,CAAC;AAAA,QAAGI,IAAH,QAAGA,IAAH;AAAA,WACHA,IAAI,KAAK,yBAAT,IACAA,IAAI,KAAK,wBAFN;AAAA,GAAD,CADqD,EAI3DH,cAAc,CAACQ,MAAD,CAJ6C,EAK3DV,GAAG,CAAC;AAAA,WAAMH,QAAQ,CAACa,MAAM,CAACE,KAAP,CAAaC,UAAb,CAAwBC,IAAzB,CAAd;AAAA,GAAD,CALwD,CAA/B;AAAA,CAAhC;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACN,OAAD,EAAeC,MAAf;AAAA,SAA+BD,OAAO,CAACE,IAAR,CACtDV,MAAM,CAAC;AAAA,QAAGI,IAAH,SAAGA,IAAH;AAAA,WAAmBA,IAAI,CAACW,QAAL,CAAc,UAAd,CAAnB;AAAA,GAAD,CADgD,EAEtDhB,GAAG,CAAC;AAAA,QAAGI,OAAH,SAAGA,OAAH;AAAA,WAAsBE,YAAY,CAACF,OAAD,CAAlC;AAAA,GAAD,CAFmD,CAA/B;AAAA,CAA3B;;AAKA,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACR,OAAD,EAAeC,MAAf;AAAA,SAA+BD,OAAO,CAACE,IAAR,CACpDV,MAAM,CAAC;AAAA,QAAGI,IAAH,SAAGA,IAAH;AAAA,WAAmBA,IAAI,KAAK,mBAA5B;AAAA,GAAD,CAD8C,EAEpDL,GAAG,CAAC;AAAA,WAAMF,wBAAwB,EAA9B;AAAA,GAAD,CAFiD,CAA/B;AAAA,CAAzB;;AAMA,eAAeC,YAAY,CACvBS,uBADuB,EAEvBO,kBAFuB,EAGvBE,gBAHuB,CAA3B","sourcesContent":["import  { syncData, toggleDeleteConfirmation, togglePasswordModal } from '../actions'\nimport { combineEpics } from 'redux-observable'\nimport { map, filter,delay, withLatestFrom} from 'rxjs/operators'\nimport { pipe } from 'rxjs'\n\nconst logValue = (payload: any) => ({\n    type: \"LOG_VALUE\",\n    payload: payload\n})\n\nconst displayError = (error: any) => ({\n    type: \"DISPLAY_ERROR\",\n    payload: error,\n})\n\n\n\nconst syncTableWithCollection = (action$: any, state$: any) => action$.pipe(\n    filter(({ type }: any) => \n        type === 'users/GET_ALL_FULFILLED' || \n        type === 'users/CREATE_FULFILLED')                        ,\n    withLatestFrom(state$),\n    map(() => syncData(state$.value.collection.data))\n)\n\nconst handleRequestError = (action$: any, state$: any) => action$.pipe(\n    filter(({ type }: any) => type.includes('REJECTED')),\n    map(({ payload }: any) => displayError(payload))\n)\n\nconst handleSoftDelete = (action$: any, state$: any) => action$.pipe(\n    filter(({ type }: any) => type === 'users/SOFT_DELETE'),\n    map(() => toggleDeleteConfirmation())\n)\n\n\nexport default combineEpics(\n    syncTableWithCollection, \n    handleRequestError, \n    handleSoftDelete\n    )"]},"metadata":{},"sourceType":"module"}