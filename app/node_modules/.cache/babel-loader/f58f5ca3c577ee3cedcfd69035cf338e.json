{"ast":null,"code":"/**\n * @hidden\n */\nexport var FRAME_DURATION = 1000 / 60; // 1000ms divided by 60fps\n\n/**\n * @hidden\n */\n\nexport var throttle = function throttle(func, wait, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var timeout, context, args, result;\n  var previous = 0;\n  options = options || {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : new Date().getTime();\n    timeout = null;\n    result = func.apply(context, args);\n\n    if (!timeout) {\n      context = args = null;\n    }\n  };\n\n  var throttled = function throttled() {\n    var now = new Date().getTime();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = now;\n      result = func.apply(context, args);\n\n      if (!timeout) {\n        context = args = null;\n      }\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  return throttled;\n};","map":null,"metadata":{},"sourceType":"module"}