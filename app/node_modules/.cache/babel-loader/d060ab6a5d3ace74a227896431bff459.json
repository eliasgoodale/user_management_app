{"ast":null,"code":"import _classCallCheck from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/nfs/2018/e/egoodale/RDT/user_management_app/app/src/components/PasswordModal.tsx\";\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport * as ActionGroup from '../actions';\nimport { connect } from 'react-redux';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { Input } from '@progress/kendo-react-inputs';\n\nfunction formInvalid(password, confirm) {\n  var mismatch = password !== confirm;\n  var invalidLength = password.length <= 6 || password.length >= 18;\n  /** Use Joi Later for regex */\n\n  return mismatch || invalidLength;\n}\n\nvar PasswordForm = function PasswordForm(props) {\n  var inEdit = props.inEdit,\n      newVal = props.newVal,\n      onPasswordSubmit = props.onPasswordSubmit;\n\n  var _React$useState = React.useState(newVal),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      password = _React$useState2[0],\n      setPassword = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      confirm = _React$useState4[0],\n      setConfirm = _React$useState4[1];\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"New Password\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    style: {\n      width: '100%'\n    },\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.value);\n    },\n    label: \"Password\",\n    required: true,\n    minLength: 6,\n    maxLength: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Confirm Password \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    style: {\n      width: '100%'\n    },\n    onChange: function onChange(e) {\n      return setConfirm(e.value);\n    },\n    value: confirm,\n    label: \"Password\",\n    required: true,\n    minLength: 6,\n    maxLength: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })))), React.createElement(DialogActionsBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      return onPasswordSubmit({\n        id: inEdit,\n        password: confirm\n      });\n    } // userId: inEdit,\n    // patch: compare(\t{ password: origVal },\n    // \t\t\t\t{ password: confirm })\n    // })}\n    ,\n    disabled: formInvalid(password, confirm),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nvar PasswordModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PasswordModal, _React$Component);\n\n  function PasswordModal() {\n    _classCallCheck(this, PasswordModal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PasswordModal).apply(this, arguments));\n  }\n\n  _createClass(PasswordModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          inCreateMode = _this$props.inCreateMode,\n          updatePassword = _this$props.updatePassword,\n          createPassword = _this$props.createPassword,\n          togglePasswordModal = _this$props.togglePasswordModal,\n          showPasswordModal = _this$props.showPasswordModal,\n          inEdit = _this$props.inEdit;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, showPasswordModal && React.createElement(Dialog, {\n        title: \"Change Password\",\n        onClose: togglePasswordModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(PasswordForm, {\n        inEdit: inEdit,\n        onPasswordSubmit: updatePassword,\n        newVal: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PasswordModal;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    inCreateMode: state.editor.inCreateMode,\n    inEdit: state.editor.inEdit,\n    showPasswordModal: state.ui.showPasswordModal\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updatePassword: function updatePassword(update) {\n      dispatch(ActionGroup.changeUserPassword(update));\n    },\n    createPassword: function createPassword(created) {\n      dispatch(ActionGroup.changeUserData(created.id, 'password', created.password));\n    },\n    togglePasswordModal: function togglePasswordModal() {\n      dispatch(ActionGroup.togglePasswordModal());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PasswordModal);","map":{"version":3,"sources":["/nfs/2018/e/egoodale/RDT/user_management_app/app/src/components/PasswordModal.tsx"],"names":["React","Button","ActionGroup","connect","Dialog","DialogActionsBar","Input","formInvalid","password","confirm","mismatch","invalidLength","length","PasswordForm","props","inEdit","newVal","onPasswordSubmit","useState","setPassword","setConfirm","marginBottom","width","e","value","id","PasswordModal","inCreateMode","updatePassword","createPassword","togglePasswordModal","showPasswordModal","Component","mapStateToProps","state","editor","ui","mapDispatchToProps","dispatch","update","changeUserPassword","created","changeUserData"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport * as ActionGroup from '../actions';\nimport { connect } from 'react-redux';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { Input } from '@progress/kendo-react-inputs';\nimport { User }from '../types'\nimport { compare } from 'fast-json-patch';\n\nfunction formInvalid(password: string, confirm :string): boolean {\n\tconst mismatch: boolean = password !== confirm;\n\tconst invalidLength: boolean = password.length <= 6 || password.length >= 18;\n\t/** Use Joi Later for regex */\n\treturn mismatch || invalidLength;\n}\n\nconst PasswordForm = (props: any) => {\n\tconst {\n\t\tinEdit,\n\t\tnewVal,\n\t\tonPasswordSubmit } = props;\n\t\n\tconst [password, setPassword] = React.useState(newVal);\n\tconst [confirm, setConfirm] = React.useState(\"\");\n\treturn (\n\t\t<React.Fragment>\n\t\t<form >\n\t\t\t<div style={{ marginBottom: '1rem' }}>\n\t\t\t<label>\n\t\t\t\tNew Password<br />\n\t\t\t\t<Input\n                    name=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e: any) => setPassword(e.value)}\n                    label=\"Password\"\n                    required={true}\n                    minLength={6}\n                    maxLength={18}/>\n\t\t\t</label>\n\t\t\t<br />\n\t\t\t<label>\n\t\t\t\tConfirm Password <br />\n\t\t\t\t<Input\n                    name=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\tonChange={(e: any) => setConfirm(e.value)}\n\t\t\t\t\tvalue={confirm}\n                    label=\"Password\"\n                    required={true}\n                    minLength={6}\n                    maxLength={18}/>\t\n\t\t\t</label>\n\t\t\t</div>\n\t\t</form>\n\t\t<DialogActionsBar>\n\t\t<Button\n\t\tonClick={() => onPasswordSubmit({ id: inEdit, password: confirm })} \n\t\t\t\n\t\t\t// userId: inEdit,\n\t\t\t// patch: compare(\t{ password: origVal },\n\t\t\t// \t\t\t\t{ password: confirm })\n\t\t\t// })}\n\n\t\tdisabled={formInvalid(password, confirm)}>\n\t\t\tSubmit\n\t\t</Button>\n\t\t</DialogActionsBar>\n\t\t</React.Fragment>\n\t)\n}\n\n\nclass PasswordModal extends React.Component <any, {}>{\n\tpublic render() {\n\t\tconst {\n\t\t\tinCreateMode,\n\t\t\tupdatePassword,\n\t\t\tcreatePassword,\n\t\t\ttogglePasswordModal,\n\t\t\tshowPasswordModal,\n\t\t\tinEdit } = this.props\n\n\treturn (\n\t\t<React.Fragment>\n\t\t{ showPasswordModal && \n\t\t\t<Dialog \n\t\t\t\ttitle=\"Change Password\"\n\t\t\t\tonClose={togglePasswordModal}>\n\t\t\t<PasswordForm\n\t\t\t\tinEdit={inEdit}\n\t\t\t\tonPasswordSubmit={updatePassword} \n\t\t\t\tnewVal=\"\" />\n\t\t</Dialog>}\n\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n\t\tinCreateMode: state.editor.inCreateMode,\n\t\tinEdit: state.editor.inEdit,\n\t\tshowPasswordModal: state.ui.showPasswordModal,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n\n\t\tupdatePassword: (update: any) => {\n            dispatch(ActionGroup.changeUserPassword(update));\n\t\t},\n\t\tcreatePassword: (created: any) => {\n\t\t\tdispatch(ActionGroup.changeUserData(created.id, 'password', created.password))\n\t\t},\n\t\ttogglePasswordModal: () => {\n\t\t\tdispatch(ActionGroup.togglePasswordModal())\n\t\t}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PasswordModal)"]},"metadata":{},"sourceType":"module"}