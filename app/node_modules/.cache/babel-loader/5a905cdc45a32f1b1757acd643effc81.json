{"ast":null,"code":"import _objectSpread from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport HttpClient from '../client';\nvar client = new HttpClient({\n  baseURL: 'http://localhost:5000'\n});\nclient.createEntity({\n  name: 'users'\n});\n/* Action Creators */\n\nexport var cancelChanges = function cancelChanges(rollbackData) {\n  return {\n    type: 'users/CANCEL_CHANGES',\n    payload: rollbackData\n  };\n};\nexport var changeFilter = function changeFilter(filter) {\n  return {\n    type: 'users/CHANGE_FILTER',\n    payload: filter\n  };\n};\nexport var changeSort = function changeSort(sort) {\n  return {\n    type: 'users/CHANGE_SORT',\n    payload: sort\n  };\n};\nexport var changeUserData = function changeUserData(id, field, value) {\n  return {\n    type: 'users/CHANGE_USER_DATA',\n    payload: {\n      id: id,\n      field: field,\n      value: value\n    }\n  };\n};\nexport var closeAlertDialog = function closeAlertDialog() {\n  return {\n    type: 'CLOSE_ALERT_DIALOG'\n  };\n};\nexport var createUser = function createUser(newUser) {\n  return {\n    type: 'users/CREATE',\n    payload: client.endpoints.users.create(_objectSpread({}, newUser, {\n      id: \"\"\n    }))\n  };\n};\nexport var enterCreateMode = function enterCreateMode() {\n  return {\n    type: 'users/ENTER_CREATE_MODE'\n  };\n};\nexport var getAllUsers = function getAllUsers() {\n  return {\n    type: 'users/GET_ALL',\n    payload: client.endpoints.users.getAll()\n  };\n};\nexport var updateUser = function updateUser(toUpdate) {\n  return {\n    type: 'users/UPDATE',\n    payload: client.endpoints.users.update(toUpdate)\n  };\n};\nexport var softDeleteUser = function softDeleteUser(toDelete) {\n  return {\n    type: 'users/SOFT_DELETE',\n    payload: client.endpoints.users.update(toDelete)\n  };\n};\nexport var selectRow = function selectRow(itemID) {\n  return {\n    type: 'users/CHANGE_EDIT_ID',\n    payload: itemID\n  };\n};\nexport var syncData = function syncData(data) {\n  return {\n    type: 'users/SYNC_DATA',\n    payload: data.map(function (u) {\n      return _objectSpread({}, u, {\n        password: \"\"\n      });\n    })\n  };\n};\nexport var togglePasswordModal = function togglePasswordModal() {\n  return {\n    type: 'users/TOGGLE_PASSWORD_MODAL'\n  };\n};\nexport var toggleDeleteConfirmation = function toggleDeleteConfirmation() {\n  return {\n    type: 'users/TOGGLE_DELETE_CONFIRMATION'\n  };\n};\n/**\n * Scafolding Actions\n */\n\nexport var changeUserPassword = function changeUserPassword(patch) {\n  return {\n    type: 'users/CHANGE_USER_PASSWORD',\n    payload: client.endpoints.users.update(patch)\n  };\n};","map":{"version":3,"sources":["/nfs/2018/e/egoodale/RDT/user_management_app/app/src/actions/index.ts"],"names":["HttpClient","client","baseURL","createEntity","name","cancelChanges","rollbackData","type","payload","changeFilter","filter","changeSort","sort","changeUserData","id","field","value","closeAlertDialog","createUser","newUser","endpoints","users","create","enterCreateMode","getAllUsers","getAll","updateUser","toUpdate","update","softDeleteUser","toDelete","selectRow","itemID","syncData","data","map","u","password","togglePasswordModal","toggleDeleteConfirmation","changeUserPassword","patch"],"mappings":"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","sourcesContent":["import { SortDescriptor, CompositeFilterDescriptor } from \"@progress/kendo-data-query\";\nimport { User } from '../types'\nimport HttpClient from '../client'\nimport * as Types from './types'\n\n\nconst client = new HttpClient({baseURL: 'http://localhost:5000'});\nclient.createEntity({name: 'users'});\n\n/* Action Creators */\nexport const cancelChanges = (rollbackData: User[]): Types.CancelChanges => ({\n    type: 'users/CANCEL_CHANGES',\n    payload: rollbackData,\n});\n\nexport const changeFilter = (filter: CompositeFilterDescriptor | null): Types.ChangeFilter => ({\n    type: 'users/CHANGE_FILTER',\n    payload: filter,\n});\n\nexport const changeSort = (sort: SortDescriptor[]): Types.ChangeSort => ({\n    type: 'users/CHANGE_SORT',\n    payload: sort\n});\n\nexport const changeUserData = (id: string, field: any, value: any): Types.ChangeUserData => ({\n    type: 'users/CHANGE_USER_DATA',\n    payload: {id, field, value}\n});\n\nexport const closeAlertDialog = (): Types.CloseAlertDialog => ({\n    type: 'CLOSE_ALERT_DIALOG',\n});\n\nexport const createUser = (newUser: User): Types.CreateUser => ({\n    type: 'users/CREATE',\n    payload: client.endpoints.users.create({...newUser, id: \"\"}),\n});\n\n\nexport const enterCreateMode = (): Types.EnterCreateMode => ({\n    type: 'users/ENTER_CREATE_MODE',\n})\nexport const getAllUsers = (): Types.GetAllUsers => ({\n    type: 'users/GET_ALL',\n    payload: client.endpoints.users.getAll(),\n});\n\nexport const updateUser = (toUpdate: Partial<Pick<User, 'id'>>): Types.UpdateUser => ({\n    type: 'users/UPDATE',\n    payload: client.endpoints.users.update(toUpdate)\n});\n\nexport const softDeleteUser = (toDelete: User): Types.SoftDeleteUser => ({\n    type: 'users/SOFT_DELETE',\n    payload: client.endpoints.users.update(toDelete),\n})\n\n\nexport const selectRow = (itemID: string): Types.EditIdChange => ({\n    type: 'users/CHANGE_EDIT_ID',\n    payload: itemID,\n});\n\nexport const syncData = (data: User[]): Types.SyncData => ({\n    type: 'users/SYNC_DATA',\n    payload: data.map((u: User)=>{\n        return {...u, password: \"\"}\n    }),\n})\n\nexport const togglePasswordModal = (): Types.TogglePasswordModal => ({\n    type: 'users/TOGGLE_PASSWORD_MODAL'\n})\n\nexport const toggleDeleteConfirmation = (): Types.ToggleDeleteConfirmation => ({\n    type: 'users/TOGGLE_DELETE_CONFIRMATION',\n})\n\n/**\n * Scafolding Actions\n */\n\n\nexport const changeUserPassword = (patch: any): Types.ChangeUserDataPassword => ({\n    type: 'users/CHANGE_USER_PASSWORD',\n    payload: client.endpoints.users.update(patch),\n})\n"]},"metadata":{},"sourceType":"module"}