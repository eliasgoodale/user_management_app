{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nimport * as React from 'react';\n/**\n * @example\n * ```jsx\n * class App extends React.PureComponent {\n *    state = {\n *        details: false,\n *        data: [\n *               { foo: 'A1', bar: 'B1', b1: 1, b2:2 },\n *               { foo: 'A2', bar: 'B2', b1: 3, b2:4 },\n *               { foo: 'A3', bar: 'B2', b1: 5, b2:6 }\n *           ]\n *    };\n *\n *    CustomHeaderCell = (props) =>\n *        <span>\n *            {props.title || props.field + ' '}\n *            <button onClick={() => this.setState({ barDetails: !this.state.barDetails })}>\n *                {this.state.barDetails ? 'collapse' : 'expand'}\n *            </button>\n *        </span>\n *\n *    render() {\n *        return (\n *            <Grid\n *                style={{ height: '420px' }}\n *                data={this.state.data}\n *                reorderable={true}\n *            >\n *                <GridColumn field=\"foo\" />\n *                <GridColumn field=\"bar\" headerCell={this.CustomHeaderCell}>\n *                    {this.state.barDetails && [\n *                        <GridColumn field=\"b1\" />,\n *                        <GridColumn field=\"b2\" />\n *                    ]}\n *                </GridColumn>\n *            </Grid>\n *        );\n *    }\n * }\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nvar GridHeaderCell =\n/** @class */\nfunction (_super) {\n  __extends(GridHeaderCell, _super);\n\n  function GridHeaderCell(props) {\n    return _super.call(this, props) || this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  GridHeaderCell.prototype.render = function () {\n    var clickProps = this.props.onClick ? {\n      href: '#',\n      onClick: this.props.onClick\n    } : {};\n    var defaultRendering = React.createElement(\"a\", __assign({\n      className: \"k-link\"\n    }, clickProps), this.props.title || this.props.field || \"\\xA0\", this.props.children);\n\n    if (this.props.render) {\n      return this.props.render.call(undefined, defaultRendering, this.props);\n    }\n\n    return defaultRendering;\n  };\n\n  return GridHeaderCell;\n}(React.Component);\n\nexport { GridHeaderCell };","map":null,"metadata":{},"sourceType":"module"}