{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport Draggable from '@telerik/kendo-draggable';\n/**\n * @hidden\n */\n\nvar GroupingIndicator =\n/** @class */\nfunction (_super) {\n  __extends(GroupingIndicator, _super);\n\n  function GroupingIndicator() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.element = null;\n    _this.draggable = new Draggable({\n      press: function press(e) {\n        if (_this.element && _this.props.onPress) {\n          _this.props.onPress(e, _this.element);\n        }\n      },\n      drag: function drag(e) {\n        if (_this.element && _this.props.onDrag) {\n          _this.props.onDrag(e, _this.element);\n        }\n      },\n      release: function release(e) {\n        if (_this.element && _this.props.onRelease) {\n          _this.props.onRelease(e);\n        }\n      }\n    });\n\n    _this.sortChange = function (event) {\n      event.preventDefault();\n\n      if (_this.props.onSortChange) {\n        var sort = _this.props.dir === 'asc' ? 'desc' : 'asc';\n\n        _this.props.onSortChange(event, sort);\n      }\n    };\n\n    _this.groupRemove = function (event) {\n      event.preventDefault();\n\n      if (_this.props.onRemove) {\n        _this.props.onRemove(event);\n      }\n    };\n\n    return _this;\n  }\n\n  GroupingIndicator.prototype.componentDidMount = function () {\n    if (this.element === null) {\n      return;\n    }\n\n    this.draggable.bindTo(this.element);\n  };\n\n  GroupingIndicator.prototype.componentWillUnmount = function () {\n    this.draggable.destroy();\n  };\n\n  GroupingIndicator.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      className: \"k-indicator-container\",\n      ref: function ref(div) {\n        _this.element = div;\n      }\n    }, React.createElement(\"div\", {\n      className: \"k-group-indicator\"\n    }, React.createElement(\"a\", {\n      className: \"k-link\",\n      href: \"#\",\n      tabIndex: -1,\n      onClick: this.sortChange\n    }, React.createElement(\"span\", {\n      className: 'k-icon k-i-sort-' + this.props.dir + '-sm'\n    }), this.props.title), React.createElement(\"a\", {\n      className: \"k-button k-button-icon k-bare\",\n      tabIndex: -1,\n      onClick: this.groupRemove\n    }, React.createElement(\"span\", {\n      className: \"k-icon k-i-group-delete\"\n    }))));\n  };\n\n  return GroupingIndicator;\n}(React.Component);\n\nexport { GroupingIndicator };","map":null,"metadata":{},"sourceType":"module"}