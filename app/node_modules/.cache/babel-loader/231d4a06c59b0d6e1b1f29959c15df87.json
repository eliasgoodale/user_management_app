{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { getNestedValue } from './../utils';\n/**\n * @hidden\n */\n\nvar GridHierarchyCell =\n/** @class */\nfunction (_super) {\n  __extends(GridHierarchyCell, _super);\n\n  function GridHierarchyCell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  GridHierarchyCell.prototype.render = function () {\n    var _this = this;\n\n    var defaultRendering = null;\n\n    if (this.props.rowType === 'groupFooter') {\n      defaultRendering = React.createElement(\"td\", {\n        className: \"k-hierarchy-cell\"\n      });\n    } else if (this.props.rowType !== 'groupHeader') {\n      var expanded_1 = getNestedValue(this.props.field, this.props.dataItem);\n      var className = expanded_1 ? 'k-icon k-minus' : 'k-icon k-plus';\n      defaultRendering = React.createElement(\"td\", {\n        className: \"k-hierarchy-cell\"\n      }, React.createElement(\"a\", {\n        onClick: function onClick(e) {\n          e.preventDefault();\n\n          if (_this.props.onChange) {\n            _this.props.onChange({\n              dataItem: _this.props.dataItem,\n              syntheticEvent: e,\n              field: _this.props.field,\n              value: !expanded_1\n            });\n          }\n        },\n        className: className,\n        href: \"#\",\n        tabIndex: -1\n      }));\n    }\n\n    return this.props.render ? this.props.render.call(undefined, defaultRendering, this.props) : defaultRendering;\n  };\n\n  return GridHierarchyCell;\n}(React.Component);\n\nexport { GridHierarchyCell };","map":null,"metadata":{},"sourceType":"module"}