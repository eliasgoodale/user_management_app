{"ast":null,"code":"import _toConsumableArray from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  fetching: false,\n  fetched: false,\n  updated: false,\n  errors: [],\n  data: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'users/UPDATE_FULFILLED':\n      return _objectSpread({}, state, {\n        data: state.data.map(function (u) {\n          return u.id === action.payload.data.id ? _objectSpread({}, action.payload.data) : u;\n        })\n      });\n\n    case 'users/SOFT_DELETE_FULFILLED':\n      return _objectSpread({}, state, {\n        data: state.data.map(function (u) {\n          return u.id === action.payload.data.id ? _objectSpread({}, action.payload.data) : u;\n        })\n      });\n\n    case 'users/CREATE_FULFILLED':\n      var newData = _toConsumableArray(state.data);\n\n      newData.unshift(action.payload.data);\n      return _objectSpread({}, state, {\n        data: newData\n      });\n\n    case 'users/GET_ALL':\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case 'users/GET_ALL_FULFILLED':\n      return _objectSpread({}, state, {\n        fetching: false,\n        fetched: true,\n        data: action.payload.data.map(function (u) {\n          return _objectSpread({}, u, {\n            password: \"\"\n          });\n        })\n      });\n\n    case 'users/GET_ALL_REJECTED':\n      return _objectSpread({}, state, {\n        fetching: false,\n        errors: _toConsumableArray(state.errors).concat([action.payload])\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/nfs/2018/e/egoodale/RDT/user_management_app/app/src/reducers/collection.ts"],"names":["initialState","fetching","fetched","updated","errors","data","state","action","type","map","u","id","payload","newData","unshift","password"],"mappings":";;AAEA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,KADO;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,MAAM,EAAE,EAJS;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;AAQA,gBAAe,YAA4C;AAAA,MAA3CC,KAA2C,uEAA9BN,YAA8B;AAAA,MAAhBO,MAAgB;;AACvD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,wBAAL;AACI,+BACWF,KADX;AAEQD,QAAAA,IAAI,EAAEC,KAAK,CAACD,IAAN,CAAWI,GAAX,CAAe,UAACC,CAAD,EAAa;AAC9B,iBAAOA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,OAAP,CAAeP,IAAf,CAAoBM,EAA7B,qBACCJ,MAAM,CAACK,OAAP,CAAeP,IADhB,IAECK,CAFR;AAGH,SAJK;AAFd;;AAQJ,SAAK,6BAAL;AACI,+BACOJ,KADP;AAEID,QAAAA,IAAI,EAAEC,KAAK,CAACD,IAAN,CAAWI,GAAX,CAAe,UAACC,CAAD,EAAa;AAC9B,iBAAOA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,OAAP,CAAeP,IAAf,CAAoBM,EAA7B,qBACAJ,MAAM,CAACK,OAAP,CAAeP,IADf,IAEHK,CAFJ;AAGH,SAJK;AAFV;;AAQJ,SAAK,wBAAL;AACQ,UAAMG,OAAO,sBAAOP,KAAK,CAACD,IAAb,CAAb;;AACAQ,MAAAA,OAAO,CAACC,OAAR,CAAgBP,MAAM,CAACK,OAAP,CAAeP,IAA/B;AACJ,+BACOC,KADP;AAEID,QAAAA,IAAI,EAAEQ;AAFV;;AAIJ,SAAK,eAAL;AACI,+BAAWP,KAAX;AAAkBL,QAAAA,QAAQ,EAAE;AAA5B;;AACJ,SAAK,yBAAL;AACI,+BACOK,KADP;AAEIL,QAAAA,QAAQ,EAAE,KAFd;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIG,QAAAA,IAAI,EAAEE,MAAM,CAACK,OAAP,CAAeP,IAAf,CAAoBI,GAApB,CAAwB,UAACC,CAAD,EAAa;AACvC,mCAAYA,CAAZ;AAAeK,YAAAA,QAAQ,EAAE;AAAzB;AACH,SAFK;AAJV;;AAQJ,SAAK,wBAAL;AACI,+BACOT,KADP;AAEIL,QAAAA,QAAQ,EAAE,KAFd;AAGIG,QAAAA,MAAM,qBAAME,KAAK,CAACF,MAAZ,UAAoBG,MAAM,CAACK,OAA3B;AAHV;;AAKJ;AACI,aAAON,KAAP;AA5CR;AA8CH,CA/CD","sourcesContent":["import { User } from '../types';\n\nconst initialState = {\n    fetching: false,\n    fetched: false,\n    updated: false,\n    errors: [],\n    data: [],\n}\n\nexport default (state: any = initialState, action: any) => {\n    switch(action.type) {\n        case 'users/UPDATE_FULFILLED':\n            return {\n                    ...state,\n                    data: state.data.map((u: User) => {\n                        return u.id === action.payload.data.id ? {\n                             ...action.payload.data \n                            } : u\n                    })\n                }\n        case 'users/SOFT_DELETE_FULFILLED':\n            return {\n                ...state,\n                data: state.data.map((u: User) => {\n                    return u.id === action.payload.data.id ? {\n                        ...action.payload.data\n                    } : u\n                })\n            }\n        case 'users/CREATE_FULFILLED':\n                const newData = [...state.data];\n                newData.unshift(action.payload.data);\n            return {\n                ...state,\n                data: newData,\n            }\n        case 'users/GET_ALL':\n            return {...state, fetching: true }\n        case 'users/GET_ALL_FULFILLED':\n            return {\n                ...state, \n                fetching: false, \n                fetched: true,\n                data: action.payload.data.map((u: User) => {\n                    return { ...u, password: \"\" }\n                }),\n            }\n        case 'users/GET_ALL_REJECTED':\n            return {\n                ...state, \n                fetching: false, \n                errors: [...state.errors, action.payload] \n        }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}