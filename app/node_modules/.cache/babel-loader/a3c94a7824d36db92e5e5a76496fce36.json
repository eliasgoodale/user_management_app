{"ast":null,"code":"import SwitchModel from './SwitchModel';\n/**\n * @hidden\n */\n\nvar DEFAULT_THRESHOLD = 5;\n/**\n * @hidden\n */\n\nvar noop = function noop() {};\n/**\n * @hidden\n */\n\n\nvar SwitchController =\n/** @class */\nfunction () {\n  function SwitchController(updateView, onChange) {\n    if (updateView === void 0) {\n      updateView = noop;\n    }\n\n    if (onChange === void 0) {\n      onChange = noop;\n    }\n\n    var _this = this;\n\n    this.overrideChecked = function (checked) {\n      _this._checked = checked;\n    };\n\n    this.change = function (checked, event) {\n      _this._checked = checked;\n\n      _this.updateView(_this.updateModel(checked ? _this.constrain : 0));\n\n      _this.onChange(checked, event);\n    };\n\n    this.addAnimation = function (model) {\n      if (model.transition === true) {\n        model.transition = 'all 200ms ease-out';\n      } else {\n        model.transition = 'none';\n      }\n\n      return model;\n    };\n\n    this.onPress = function (event) {\n      var pageX = event.pageX;\n      _this.lastPressX = _this.originalPressX = pageX;\n    };\n\n    this.onRelease = function (event) {\n      var pageX = event.pageX;\n      var delta = Math.abs(_this.originalPressX - pageX);\n      var snapPoint = _this.constrain / 2;\n      var checked = delta < DEFAULT_THRESHOLD ? !_this._checked : _this.handlePosition > snapPoint;\n\n      _this.change(checked, event);\n    };\n\n    this.onDrag = function (event) {\n      var pageX = event.pageX;\n      var _a = _this.coords,\n          left = _a.left,\n          right = _a.right;\n      var overElement = pageX > left && pageX < right;\n\n      if (overElement) {\n        var delta = _this.reverse ? _this.lastPressX - pageX : pageX - _this.lastPressX;\n\n        var position = _this.limit(_this.handlePosition + delta);\n\n        _this.lastPressX = pageX;\n        _this.handlePosition = position;\n\n        _this.updateView(_this.updateModel(_this.handlePosition));\n      }\n\n      if (pageX > right) {\n        _this.updateView(_this.updateModel(_this.reverse ? 0 : _this.constrain));\n      }\n\n      if (pageX < left) {\n        _this.updateView(_this.updateModel(_this.reverse ? 0 : _this.constrain));\n      }\n    };\n\n    this.limit = function (value) {\n      if (value > _this.constrain) {\n        return _this.constrain;\n      }\n\n      if (value < 0) {\n        return 0;\n      }\n\n      return value;\n    };\n\n    this.handlePosition = 0;\n    this.wrapperOffset = 0;\n    this.handleOffset = 0;\n    this.handleMargin = 4;\n    this.updateView = updateView;\n    this.onChange = onChange;\n  }\n\n  SwitchController.prototype.updateState = function (_a) {\n    var wrapperOffset = _a.wrapperOffset,\n        handleOffset = _a.handleOffset,\n        checked = _a.checked,\n        _b = _a.animate,\n        animate = _b === void 0 ? true : _b,\n        coords = _a.coords,\n        handleMargin = _a.handleMargin,\n        reverse = _a.reverse;\n    this.wrapperOffset = wrapperOffset;\n    this.handleOffset = handleOffset;\n    this.coords = coords;\n    this.handleMargin = handleMargin;\n    this._checked = checked;\n    this.reverse = reverse;\n    this.updateView(this.updateModel(checked ? this.constrain : 0, animate));\n  };\n\n  Object.defineProperty(SwitchController.prototype, \"isChecked\", {\n    get: function get() {\n      return this._checked;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SwitchController.prototype.updateModel = function (position, animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    var pos = this.reverse ? this.wrapperOffset / 2 - position : position;\n    return new SwitchModel(pos, animate);\n  };\n\n  Object.defineProperty(SwitchController.prototype, \"constrain\", {\n    get: function get() {\n      return this.wrapperOffset - this.handleOffset - this.handleMargin;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SwitchController.prototype, \"checked\", {\n    get: function get() {\n      return this._checked;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SwitchController;\n}();\n\nexport default SwitchController;","map":null,"metadata":{},"sourceType":"module"}