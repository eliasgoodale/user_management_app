{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { getNestedValue } from './../utils';\nimport { guid } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar GridSelectionCell =\n/** @class */\nfunction (_super) {\n  __extends(GridSelectionCell, _super);\n\n  function GridSelectionCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._inputId = guid();\n\n    _this.handleOnChange = function (syntheticEvent) {\n      if (_this.props.selectionChange) {\n        _this.props.selectionChange({\n          syntheticEvent: syntheticEvent\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  GridSelectionCell.prototype.render = function () {\n    var data = getNestedValue(this.props.field, this.props.dataItem);\n    var defaultRendering = this.props.rowType !== 'groupHeader' ? React.createElement(\"td\", {\n      className: this.props.className\n    }, React.createElement(\"input\", {\n      checked: data,\n      id: this._inputId,\n      type: \"checkbox\",\n      className: \"k-checkbox\",\n      onChange: this.handleOnChange\n    }), React.createElement(\"label\", {\n      className: \"k-checkbox-label\",\n      htmlFor: this._inputId\n    })) : null;\n    return this.props.render ? this.props.render.call(undefined, defaultRendering, this.props) : defaultRendering;\n  };\n\n  return GridSelectionCell;\n}(React.Component);\n\nexport { GridSelectionCell };","map":null,"metadata":{},"sourceType":"module"}