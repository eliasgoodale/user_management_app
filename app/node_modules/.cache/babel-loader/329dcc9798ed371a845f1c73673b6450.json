{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { GroupingIndicator } from '../drag/GroupingIndicator';\nimport { registerForLocalization, provideLocalizationService as intl } from '@progress/kendo-react-intl';\nimport { messages, groupPanelEmpty as messageKey } from './../messages';\n/**\n * @hidden\n */\n\nvar GroupPanel =\n/** @class */\nfunction (_super) {\n  __extends(GroupPanel, _super);\n\n  function GroupPanel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onGroupRemove = function (event, index) {\n      var newGroups = _this.props.group.slice();\n\n      newGroups.splice(index, 1);\n\n      _this.props.groupChange(newGroups, event);\n    };\n\n    _this.onGroupSortChange = function (event, index, groupDesc, dir) {\n      var group = Object.assign({}, groupDesc, {\n        dir: dir\n      });\n\n      var newGroups = _this.props.group.slice();\n\n      newGroups.splice(index, 1, group);\n\n      _this.props.groupChange(newGroups, event);\n    };\n\n    return _this;\n  }\n\n  GroupPanel.prototype.render = function () {\n    var _this = this;\n\n    var groupsProp = this.props.group || [];\n    var groups = groupsProp.map(function (groupDesc, index) {\n      return React.createElement(GroupingIndicator, {\n        key: index,\n        dir: groupDesc.dir || 'asc',\n        title: _this.props.resolveTitle(groupDesc.field),\n        onRemove: function onRemove(event) {\n          _this.onGroupRemove(event, index);\n        },\n        onSortChange: function onSortChange(event, dir) {\n          _this.onGroupSortChange(event, index, groupDesc, dir);\n        },\n        onPress: _this.props.pressHandler,\n        onDrag: _this.props.dragHandler,\n        onRelease: _this.props.releaseHandler\n      });\n    });\n    return React.createElement(\"div\", {\n      ref: this.props.refCallback,\n      className: \"k-grouping-header k-grouping-header-flex\"\n    }, groups, React.createElement(\"div\", {\n      className: \"k-indicator-container\"\n    }, !groups.length && intl(this).toLanguageString(messageKey, messages[messageKey])));\n  };\n\n  return GroupPanel;\n}(React.Component);\n\nexport { GroupPanel };\nregisterForLocalization(GroupPanel);","map":null,"metadata":{},"sourceType":"module"}