{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport Draggable from '@telerik/kendo-draggable';\n/**\n * @hidden\n */\n\nvar ColumnDraggable =\n/** @class */\nfunction (_super) {\n  __extends(ColumnDraggable, _super);\n\n  function ColumnDraggable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.element = null;\n    _this.draggable = new Draggable({\n      press: function press(event) {\n        if (_this.element && _this.props.pressHandler) {\n          _this.props.pressHandler(event, _this.element);\n        }\n      },\n      drag: function drag(event) {\n        if (_this.element && _this.props.dragHandler) {\n          _this.props.dragHandler(event, _this.element);\n        }\n      },\n      release: function release(event) {\n        if (_this.element && _this.props.releaseHandler) {\n          _this.props.releaseHandler(event);\n        }\n      }\n    });\n    return _this;\n  }\n\n  ColumnDraggable.prototype.componentDidMount = function () {\n    if (this.element) {\n      this.draggable.bindTo(this.element);\n    }\n  };\n\n  ColumnDraggable.prototype.componentWillUnmount = function () {\n    this.draggable.destroy();\n  };\n\n  ColumnDraggable.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"tr\", {\n      ref: function ref(tr) {\n        return _this.element = tr;\n      }\n    }, this.props.children);\n  };\n\n  return ColumnDraggable;\n}(React.PureComponent);\n\nexport { ColumnDraggable };","map":null,"metadata":{},"sourceType":"module"}