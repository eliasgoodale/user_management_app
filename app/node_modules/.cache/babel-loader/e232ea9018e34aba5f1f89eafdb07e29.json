{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\n/**\n * @hidden\n */\n\nvar GridGroupCell =\n/** @class */\nfunction (_super) {\n  __extends(GridGroupCell, _super);\n\n  function GridGroupCell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  GridGroupCell.prototype.render = function () {\n    var defaultRendering = null;\n    var _a = this.props,\n        columnIndex = _a.columnIndex,\n        level = _a.level,\n        columnsCount = _a.columnsCount,\n        rowType = _a.rowType,\n        dataItem = _a.dataItem,\n        field = _a.field,\n        onChange = _a.onChange,\n        expanded = _a.expanded,\n        render = _a.render;\n    var definedField = field || '';\n\n    if (columnIndex === undefined || level === undefined || columnIndex < level || columnsCount === undefined || rowType !== 'groupHeader' || dataItem[definedField] === undefined) {\n      defaultRendering = React.createElement(\"td\", {\n        key: 'g' + columnIndex,\n        className: \"k-group-cell\"\n      });\n    } else if (columnIndex <= level) {\n      defaultRendering = React.createElement(\"td\", {\n        key: 'g-colspan',\n        colSpan: columnsCount - columnIndex\n      }, React.createElement(\"p\", {\n        className: \"k-reset\"\n      }, React.createElement(\"a\", {\n        onClick: function onClick(e) {\n          e.preventDefault();\n\n          if (onChange) {\n            onChange({\n              dataItem: dataItem,\n              syntheticEvent: e,\n              field: undefined,\n              value: !expanded\n            });\n          }\n        },\n        href: \"#\",\n        tabIndex: -1,\n        className: expanded ? 'k-i-collapse k-icon' : 'k-i-expand k-icon'\n      }), dataItem[definedField] instanceof Date && dataItem[definedField].toString ? dataItem[definedField].toString() : dataItem[definedField]));\n    }\n\n    return render ? render.call(undefined, defaultRendering, this.props) : defaultRendering;\n  };\n\n  return GridGroupCell;\n}(React.Component);\n\nexport { GridGroupCell };","map":null,"metadata":{},"sourceType":"module"}