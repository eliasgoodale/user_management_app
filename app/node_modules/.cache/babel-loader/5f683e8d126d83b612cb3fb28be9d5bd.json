{"ast":null,"code":"import _classCallCheck from \"/nfs/2018/e/egoodale/RDT/user_management_app/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport axios from 'axios';\n\nvar HttpClient = function HttpClient(config) {\n  var _this = this;\n\n  var endpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  _classCallCheck(this, HttpClient);\n\n  this.config = config;\n  this.endpoints = endpoints;\n\n  this.createEntity = function (entity) {\n    _this.endpoints[entity.name] = _this.createBasicCRUDEndpoints(entity);\n  };\n\n  this.createEntities = function (entities) {\n    entities.forEach(_this.createEntity.bind(_this));\n  };\n\n  this.createBasicCRUDEndpoints = function (_ref) {\n    var name = _ref.name;\n    var endpoints = {};\n    var resourceURL = \"/\".concat(name);\n\n    endpoints.getAll = function () {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          query = _ref2.query;\n\n      return _this._instance.get(resourceURL, {\n        params: {\n          query: query\n        }\n      });\n    };\n\n    endpoints.getOne = function (_ref3) {\n      var id = _ref3.id;\n      return _this._instance.get(\"\".concat(resourceURL, \"/\").concat(id));\n    };\n\n    endpoints.create = function (toCreate) {\n      return _this._instance.post(resourceURL, toCreate);\n    };\n\n    endpoints.update = function (toUpdate) {\n      return _this._instance.patch(\"\".concat(resourceURL, \"/\").concat(toUpdate.id), toUpdate);\n    };\n\n    return endpoints;\n  };\n\n  this._instance = axios.create(config);\n};\n\nexport default HttpClient;","map":{"version":3,"sources":["/nfs/2018/e/egoodale/RDT/user_management_app/app/src/client.ts"],"names":["axios","HttpClient","config","endpoints","createEntity","entity","name","createBasicCRUDEndpoints","createEntities","entities","forEach","bind","resourceURL","getAll","query","_instance","get","params","getOne","id","create","toCreate","post","update","toUpdate","patch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,U,GAGF,oBACKC,MADL,EAGD;AAAA;;AAAA,MADMC,SACN,uEADqB,EACrB;;AAAA;;AAAA;AAAA;;AAAA,OAEFC,YAFE,GAEa,UAACC,MAAD,EAAiB;AAC/B,IAAA,KAAI,CAACF,SAAL,CAAeE,MAAM,CAACC,IAAtB,IAA8B,KAAI,CAACC,wBAAL,CAA8BF,MAA9B,CAA9B;AACA,GAJC;;AAAA,OAMFG,cANE,GAMe,UAACC,QAAD,EAAqB;AACrCA,IAAAA,QAAQ,CAACC,OAAT,CAAiB,KAAI,CAACN,YAAL,CAAkBO,IAAlB,CAAuB,KAAvB,CAAjB;AACA,GARC;;AAAA,OAUFJ,wBAVE,GAUyB,gBAAmB;AAAA,QAAhBD,IAAgB,QAAhBA,IAAgB;AAC7C,QAAIH,SAAc,GAAG,EAArB;AACA,QAAMS,WAAW,cAAON,IAAP,CAAjB;;AAEAH,IAAAA,SAAS,CAACU,MAAV,GAAmB;AAAA,sFAAiB,EAAjB;AAAA,UAAIC,KAAJ,SAAIA,KAAJ;;AAAA,aAAyB,KAAI,CAACC,SAAL,CAAeC,GAAf,CAAmBJ,WAAnB,EAAgC;AAAEK,QAAAA,MAAM,EAAE;AAAEH,UAAAA,KAAK,EAALA;AAAF;AAAV,OAAhC,CAAzB;AAAA,KAAnB;;AACAX,IAAAA,SAAS,CAACe,MAAV,GAAmB;AAAA,UAAIC,EAAJ,SAAIA,EAAJ;AAAA,aAAkB,KAAI,CAACJ,SAAL,CAAeC,GAAf,WAAsBJ,WAAtB,cAAqCO,EAArC,EAAlB;AAAA,KAAnB;;AACAhB,IAAAA,SAAS,CAACiB,MAAV,GAAmB,UAAEC,QAAF;AAAA,aAAqB,KAAI,CAACN,SAAL,CAAeO,IAAf,CAAoBV,WAApB,EAAiCS,QAAjC,CAArB;AAAA,KAAnB;;AACAlB,IAAAA,SAAS,CAACoB,MAAV,GAAmB,UAAEC,QAAF;AAAA,aAAqB,KAAI,CAACT,SAAL,CAAeU,KAAf,WAAwBb,WAAxB,cAAuCY,QAAQ,CAACL,EAAhD,GAAsDK,QAAtD,CAArB;AAAA,KAAnB;;AAEA,WAAOrB,SAAP;AACA,GApBC;;AAAE,OAAKY,SAAL,GAAiBf,KAAK,CAACoB,MAAN,CAAalB,MAAb,CAAjB;AAAwC,C;;AAuB7C,eAAeD,UAAf","sourcesContent":["import axios from 'axios'\nimport { AxiosInstance } from 'axios'\n\nclass HttpClient {\n\tprivate _instance: AxiosInstance;\n\n    public constructor (\n\t\tpublic config: any,\n\t\tpublic endpoints: any={}\n\t) { this._instance = axios.create(config); }\n\n\tcreateEntity = (entity: any) => {\n\t\tthis.endpoints[entity.name] = this.createBasicCRUDEndpoints(entity)\n\t}\n\n\tcreateEntities = (entities: any[]) => {\n\t\tentities.forEach(this.createEntity.bind(this));\n\t}\n\n\tcreateBasicCRUDEndpoints = ({ name }: any) => {\n\t\tlet endpoints: any = {}\n\t\tconst resourceURL = `/${name}`;\n\n\t\tendpoints.getAll = ( { query }: any={} ) => this._instance.get(resourceURL, { params: { query } });\n\t\tendpoints.getOne = ( { id }: any) => this._instance.get(`${resourceURL}/${id}`);\n\t\tendpoints.create = ( toCreate: any ) => this._instance.post(resourceURL, toCreate);\n\t\tendpoints.update = ( toUpdate: any ) => this._instance.patch(`${resourceURL}/${toUpdate.id}`, toUpdate)\n\n\t\treturn endpoints;\n\t}\n}\n\nexport default HttpClient;"]},"metadata":{},"sourceType":"module"}